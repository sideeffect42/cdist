#!/bin/sh -e
#
# 2020 Dennis Camera (dennis.camera@ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

transaction_name=${__object_id:?}
batchfile="${__global:?}/tmp/__uci/${transaction_name}.txt"

test -s "${batchfile}" || exit 0

printf 'commit transaction %s\n' "${transaction_name}" >>"${__messages_out:?}"

# NOTE: Uncommited changes are checked in code-remote instead of in an explorer
#       because in cdist there is no interlocking between explorers and code
#       execution.
#       Checking for uncommited changes in an explorer leaves a time slot in
#       which changes made are not detected by the code.
#       Furthermore an explorer running concurrently with another transactions
#       code-remote could lead to a false positive.

cat <<CODE
changes=\$(uci changes)

if test -n "\${changes}"
then
	echo 'Uncommited UCI changes were found on the target:'
	printf '%s\n\n' "\${changes}"
	echo 'This can be caused by manual changes or due to a previous failed run.'
	echo 'Please investigate the situation, revert or commit the changes, and try again.'
	exit 1
fi >&2

check_errors() {
	# reads stdin and forwards non-empty lines to stderr.
	# returns 0 if stdin is empty, else 1.
	! grep -e . >&2
}

commit() {
	uci commit
}

rollback() {
	echo >&2
	echo 'An error occurred when trying to commit transaction ${transaction_name}!' >&2

	uci changes \\
	| sed -e 's/^-//' -e 's/\..*\$//' \\
	| sort -u \\
	| while read -r _package
	  do
		  uci revert "\${_package}"
		  echo "\${_package}"  # for logging
	  done \\
	| awk '
	  BEGIN { printf "Reverted changes in: " }
	  { printf "%s%s", (FNR > 1 ? ", " : ""), \$0 }
	  END { printf "\\n" }' >&2

	return 1
}

uci batch <<'EOF' 2>&1 | check_errors && commit || rollback
$(cat "${batchfile}")
EOF
CODE
